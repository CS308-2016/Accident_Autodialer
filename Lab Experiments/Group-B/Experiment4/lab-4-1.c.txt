/*
▪ *
▪ * Team Id: Team 7B
▪ * Author List: Sanket Kanjalkar(120050011), 
				 Karan Ganju(120050021)
▪ * Filename: lab4-1.c
▪ * Functions: print_str(),itoa().
▪ * Global Variables: ui32Tempavg>
*/

#include <stdbool.h>
#include <stdint.h>
#include <driverlib/adc.h>
#include <driverlib/gpio.h>
#include <driverlib/pin_map.h>
#include <driverlib/sysctl.h>
#include <driverlib/uart.h>
#include <inc/hw_memmap.h>


#define TARGET_IS_BLIZZARD_RB1
#include "driverlib/rom.h"




volatile uint32_t ui32TempAvg;
int temp =0 ;

/*

 * Function Name: print_str()

 * Input: char array

 * Output: none

 * Description: prints a array of b

 * Example Call: print_str(a);

 */

void print_str(char a[])
{
	int i=0;
	while(a[i]!='\0')
	{
		UARTCharPut(UART0_BASE, a[i]);
		i++;
	}
}

/*

 * Function Name: itoa()

 * Input: int i, char b

 * Output: none

 * Description: itoa function to convert into char array for printing

 * Example Call: setup();

 */

char* itoa(int i, char b[]){
	char const digit[] = "0123456789";
	char* p = b;
	if(i<0){
		*p++ = '-';
		i *= -1;
	}
	int shifter = i;
	do{ //Move to where representation ends
		++p;
		shifter = shifter/10;
	}while(shifter);
	*p = '\0';
	do{ //Move back, inserting digits as u go
		*--p = digit[i%10];
		i = i/10;
	}while(i);
	return b;
}

int main(void)
{
	uint32_t ui32ADC0Value[4];
	volatile uint32_t ui32TempAvg;
	volatile uint32_t ui32TempValueC;
	volatile uint32_t ui32TempValueF;


	
	
	ROM_SysCtlClockSet(SYSCTL_SYSDIV_5|SYSCTL_USE_PLL|SYSCTL_OSC_MAIN|SYSCTL_XTAL_16MHZ);
	ROM_SysCtlPeripheralEnable(SYSCTL_PERIPH_ADC0);
	ROM_ADCHardwareOversampleConfigure(ADC0_BASE, 64);
	ROM_ADCSequenceConfigure(ADC0_BASE, 1, ADC_TRIGGER_PROCESSOR, 0);
	ROM_ADCSequenceStepConfigure(ADC0_BASE, 1, 0, ADC_CTL_TS);
	ROM_ADCSequenceStepConfigure(ADC0_BASE, 1, 1, ADC_CTL_TS);
	ROM_ADCSequenceStepConfigure(ADC0_BASE, 1, 2, ADC_CTL_TS);
	ROM_ADCSequenceStepConfigure(ADC0_BASE,1,3,ADC_CTL_TS|ADC_CTL_IE|ADC_CTL_END);
	ROM_ADCSequenceEnable(ADC0_BASE, 1);

	SysCtlPeripheralEnable(SYSCTL_PERIPH_UART0);
	ROM_ADCHardwareOversampleConfigure(ADC0_BASE, 64);

	SysCtlPeripheralEnable(SYSCTL_PERIPH_GPIOA);
	GPIOPinConfigure(GPIO_PA0_U0RX);
	GPIOPinConfigure(GPIO_PA1_U0TX);
	GPIOPinTypeUART(GPIO_PORTA_BASE, GPIO_PIN_0 | GPIO_PIN_1);
	UARTConfigSetExpClk(UART0_BASE, SysCtlClockGet(), 115200, (UART_CONFIG_WLEN_8 | UART_CONFIG_STOP_ONE | UART_CONFIG_PAR_NONE));

	while(1)
	{
		ROM_ADCIntClear(ADC0_BASE, 1);
		ROM_ADCProcessorTrigger(ADC0_BASE, 1);
		while(!ROM_ADCIntStatus(ADC0_BASE, 1, false))
		{
		}
		ROM_ADCSequenceDataGet(ADC0_BASE, 1, ui32ADC0Value);
		ui32TempAvg = (ui32ADC0Value[0] + ui32ADC0Value[1] + ui32ADC0Value[2] + ui32ADC0Value[3] + 2)/4;
		ui32TempValueC =(1475 - ((2475 * ui32TempAvg)) / 4096)/10;
		ui32TempValueF = ((ui32TempValueC * 9) + 160) / 5;

		char t1[50] = "Current Temperature " ;
		char t2[20] = "fC ";
		t2[0] = 167;
		t2[2] = 10;
		char t3[20];


		print_str(t1);
		print_str(itoa(ui32TempValueC,t3));
		print_str(t2);
		SysCtlDelay(SysCtlClockGet()/3);

	}
}
